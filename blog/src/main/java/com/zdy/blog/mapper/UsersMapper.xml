<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zdy.blog.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.zdy.blog.model.Users" >
    <id column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="Email" property="email" jdbcType="VARCHAR" />
    <result column="Power" property="power" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    UserName, Password, Email, Power
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from users
    where UserName = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryInfo" resultType="java.lang.Integer" parameterType="java.lang.String">
    select
    count(*)
    from users
    where UserName = #{username,jdbcType=VARCHAR} and Password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryPower" resultType="java.lang.String" parameterType="java.lang.String" >
    select
     Power
    from users
    where UserName = #{username,jdbcType=VARCHAR} and Password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectAllUsers" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from users
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from users
    where UserName = #{username,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByUserNameAndPower" parameterType="java.lang.String" >
    delete from users
    where UserName = #{username,jdbcType=VARCHAR} and Power = #{power,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.zdy.blog.model.Users" >
    insert into users (UserName, Password, Email, 
      Power)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{power,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zdy.blog.model.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        UserName,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="email != null" >
        Email,
      </if>
      <if test="power != null" >
        Power,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="power != null" >
        #{power,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zdy.blog.model.Users" >
    update users
    <set >
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="power != null" >
        Power = #{power,jdbcType=VARCHAR},
      </if>
    </set>
    where UserName = #{username,jdbcType=VARCHAR}
  </update>

  <update id="updateByUserNameAndPowerSelective" parameterType="com.zdy.blog.model.Users" >
    update users
    <set >
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="power != null" >
        Power = #{power,jdbcType=VARCHAR},
      </if>
    </set>
    where UserName = #{username,jdbcType=VARCHAR} and Power = #{power,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.zdy.blog.model.Users" >
    update users
    set Password = #{password,jdbcType=VARCHAR},
      Email = #{email,jdbcType=VARCHAR},
      Power = #{power,jdbcType=VARCHAR}
    where UserName = #{username,jdbcType=VARCHAR}
  </update>
</mapper>